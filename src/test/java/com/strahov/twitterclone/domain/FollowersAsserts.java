package com.strahov.twitterclone.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FollowersAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowersAllPropertiesEquals(Followers expected, Followers actual) {
        assertFollowersAutoGeneratedPropertiesEquals(expected, actual);
        assertFollowersAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowersAllUpdatablePropertiesEquals(Followers expected, Followers actual) {
        assertFollowersUpdatableFieldsEquals(expected, actual);
        assertFollowersUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowersAutoGeneratedPropertiesEquals(Followers expected, Followers actual) {
        assertThat(expected)
            .as("Verify Followers auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowersUpdatableFieldsEquals(Followers expected, Followers actual) {
        assertThat(expected)
            .as("Verify Followers relevant properties")
            .satisfies(e -> assertThat(e.getSince()).as("check since").isEqualTo(actual.getSince()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowersUpdatableRelationshipsEquals(Followers expected, Followers actual) {
        assertThat(expected)
            .as("Verify Followers relationships")
            .satisfies(e -> assertThat(e.getFollower()).as("check follower").isEqualTo(actual.getFollower()))
            .satisfies(e -> assertThat(e.getUserProfile()).as("check userProfile").isEqualTo(actual.getUserProfile()));
    }
}
