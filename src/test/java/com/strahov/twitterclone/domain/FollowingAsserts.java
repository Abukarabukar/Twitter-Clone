package com.strahov.twitterclone.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FollowingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowingAllPropertiesEquals(Following expected, Following actual) {
        assertFollowingAutoGeneratedPropertiesEquals(expected, actual);
        assertFollowingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowingAllUpdatablePropertiesEquals(Following expected, Following actual) {
        assertFollowingUpdatableFieldsEquals(expected, actual);
        assertFollowingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowingAutoGeneratedPropertiesEquals(Following expected, Following actual) {
        assertThat(expected)
            .as("Verify Following auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowingUpdatableFieldsEquals(Following expected, Following actual) {
        assertThat(expected)
            .as("Verify Following relevant properties")
            .satisfies(e -> assertThat(e.getSince()).as("check since").isEqualTo(actual.getSince()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowingUpdatableRelationshipsEquals(Following expected, Following actual) {
        assertThat(expected)
            .as("Verify Following relationships")
            .satisfies(e -> assertThat(e.getFollowed()).as("check followed").isEqualTo(actual.getFollowed()))
            .satisfies(e -> assertThat(e.getUserProfile()).as("check userProfile").isEqualTo(actual.getUserProfile()));
    }
}
